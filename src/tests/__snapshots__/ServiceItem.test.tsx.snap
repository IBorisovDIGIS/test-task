// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search filter should render correctly Should renders correctly 1`] = `
<WithStyles(ForwardRef(Grid))
  item={true}
  xs={12}
>
  <WithStyles(ForwardRef(Paper))
    classes={
      Object {
        "root": "makeStyles-container-1",
      }
    }
  >
    <WithStyles(ForwardRef(Grid))
      alignItems="stretch"
      container={true}
      spacing={2}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
        xs={6}
      >
        <WithStyles(ForwardRef(Typography))
          classes={
            Object {
              "root": "makeStyles-title-4",
            }
          }
        >
          Sitecostructor.io
        </WithStyles(ForwardRef(Typography))>
        <WithStyles(ForwardRef(Typography))
          classes={
            Object {
              "root": "makeStyles-subtitle-5",
            }
          }
        >
          Site constructor
        </WithStyles(ForwardRef(Typography))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        alignItems="flex-end"
        container={true}
        item={true}
        xs={3}
      >
        <WithStyles(ForwardRef(TextField))
          InputProps={
            Object {
              "classes": Object {
                "root": "makeStyles-input-9",
              },
              "disableUnderline": true,
              "endAdornment": <WithStyles(ForwardRef(Tooltip))
                arrow={true}
                open={false}
                placement="top"
                title="itpaycodes"
              >
                <WithStyles(ForwardRef(InputAdornment))
                  className="makeStyles-copyIconWrapper-10"
                  onClick={[Function]}
                  position="end"
                >
                  <CustomIcon
                    alt=""
                    icon="copy.svg"
                    iconClasses="makeStyles-copyIcon-11"
                  />
                </WithStyles(ForwardRef(InputAdornment))>
              </WithStyles(ForwardRef(Tooltip))>,
            }
          }
          disabled={true}
          fullWidth={true}
          label="PROMOCODE"
          value="itpaycodes"
        />
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        alignItems="flex-end"
        container={true}
        item={true}
        xs={3}
      >
        <WithStyles(ForwardRef(Button))
          classes={
            Object {
              "root": "makeStyles-bonusButton-7",
            }
          }
          fullWidth={true}
          onClick={[Function]}
          variant="contained"
        >
          activateBonus
        </WithStyles(ForwardRef(Button))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(Paper))>
</WithStyles(ForwardRef(Grid))>
`;
